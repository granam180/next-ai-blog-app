https://www.prisma.io/docs/guides/other/troubleshooting-orm/help-articles/vercel-caching-issue

Problem
If you deploy an application using Prisma to Vercel, you may run into the following error message on deployment:

Prisma has detected that this project was built on Vercel, which caches dependencies.
This leads to an outdated Prisma Client because Prisma's auto-generation isn't triggered.
To fix this, make sure to run the `prisma generate` command during the build process.

Learn how: https://pris.ly/d/vercel-build
This occurs because Vercel caches the dependencies of your project until one of those dependencies changes. It does this to allow faster builds, and while this is typically a good thing, it causes some problems for Prisma Client.

Prisma uses a postinstall hook to generate Prisma Client when dependencies are installed. Because Vercel uses cached modules, this postinstall hook never gets run in subsequent deployments after the initial deployment. This results in Prisma Client becoming out of sync with your database schema.

This error message prevents this situation from happening and directs you here to learn how to fix the root issue.


Solution

This issue can be solved by explicitly generating Prisma Client on every deployment. Running prisma generate before each deployment will ensure Prisma Client is up-to-date.

Within the scripts section of your project's package.json file, if there is not already a script named postinstall, add one and add prisma generate to that script:

{
  ...
  "scripts" {
    "postinstall": "prisma generate"
  }
  ...
}
The application's build script in package.json
Within the scripts section of your project's package.json file, within the build script, prepend prisma generate to the default vercel build command:

{
  ...
  "scripts" {
    "build": "prisma generate && <actual-build-command>"
  }
  ...
}